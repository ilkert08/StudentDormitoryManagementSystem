/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yurtyonetimsistemi;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


public class ogrenciSorgusu extends javax.swing.JFrame {

    public ogrenciSorgusu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tcNo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        header = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("SORGULA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Öğrenci Kimlik Numarası:");

        tcNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcNoActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Öğrenci Adı", "Öğrenci Soyadı", "T.C", "Okul Bilgisi", "Bölüm Bilgisi", "Telefon Numaras", "Hastalık Durumu", "Sınıf", "Oda No", "Adres"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        jLabel2.setText("Oda Numarası:");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jButton2.setText("SORGULA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        header.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        header.setForeground(new java.awt.Color(100, 100, 100));
        header.setText("Öğrenci Sorgula");
        header.setToolTipText("");

        jButton3.setText("TÜM ÖĞRENCİLERİ LİSTELE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("SİLİNEN ÖĞRENCİLERİ LİSTELE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(tcNo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(63, 63, 63)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jButton2))
                            .addComponent(header)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tcNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tcNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcNoActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = new DefaultTableModel();
        mysqlConnector msql = new mysqlConnector();
        Connection con = msql.connectorSender();
        try {
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(String.format("SELECT * from ogrenci where tcNo = %s", tcNo.getText()));
            Object[] dataArr = null;

            while (rs.next()) {         
                             
                dataArr = new Object[]{rs.getString(1), rs.getString(2), rs.getString(3),
                    rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8),
                    rs.getString(9), rs.getString(10), rs.getString(11)};
                /*
                id:1, ad:2 , soyad:3, okul:4, tc:5, adres:6,
                bölüm:7, hastalik:8, telefon:9, sınıf:10, odano:11
                */
                

            }
            table.setModel(new javax.swing.table.DefaultTableModel(
                    new Object[][]{
                        {dataArr[1], dataArr[2], dataArr[4], dataArr[3], dataArr[6], dataArr[8], dataArr[7], dataArr[9], dataArr[10], dataArr[5]}
                    },
                    new String[]{
                        "Öğrenci Adı", "Öğrenci Soyadı", "T.C", "Okul Bilgisi", "Bölüm Bilgisi", "Telefon Numarası", "Hastalık Durumu", "Sınıf", "Oda No","Adres"
                    }
            ) {
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    true,true,true,true,true,true,true,true,true,true
                };

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            });

        } catch (SQLException e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        DefaultTableModel model;

        mysqlConnector msql = new mysqlConnector();
        Connection con = msql.connectorSender();
        try {
            Statement stmt = con.createStatement();
            String sorgulanacakOda = jTextField2.getText();
            ResultSet rs = stmt.executeQuery(String.format("select * from ogrenci o, odalar o2 where o.odano = o2.idodalar and o2.idodalar = '%s'", sorgulanacakOda));
            Object[][] dataArr = null;

            ArrayList<Object[]> dataList = new ArrayList<>();
            while (rs.next()) {
                //System.out.println(rs.getString(1) + "  " + rs.getString(2)+"  " +rs.getString(3));                
                Object[] objArr = {rs.getString(2), rs.getString(3), rs.getString(5),
                    rs.getString(4), rs.getString(7), rs.getString(9), rs.getString(8), rs.getString(10),
                    rs.getString(11), rs.getString(6)} ;
                dataList.add(objArr);
            }
            
                            /*
                id:1, ad:2 , soyad:3, okul:4, tc:5, adres:6,
                bölüm:7, hastalik:8, telefon:9, sınıf:10, odano:11
                */
                
            
            dataArr = new Object[dataList.size()][];
            for (int i = 0; i < dataList.size(); i++) {
                dataArr[i] = dataList.get(i);
                System.out.println(dataArr[i][0]);
            }


            model = new javax.swing.table.DefaultTableModel(
                    dataArr,
                    new String[]{
                         "Öğrenci Adı", "Öğrenci Soyadı", "T.C", "Okul Bilgisi", "Bölüm Bilgisi", "Telefon Numarası", "Hastalık Durumu", "Sınıf", "Oda No","Adres"
                    }
            ) {
                
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    true,true,true,true,true,true,true,true,true,true
                };
                

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };

            table.setModel(model);

        } catch (SQLException e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model;

        mysqlConnector msql = new mysqlConnector();
        Connection con = msql.connectorSender();
        try {
            Statement stmt = con.createStatement();
            String sorgulanacakOda = jTextField2.getText();
            ResultSet rs = stmt.executeQuery(String.format("select * from ogrenci"));
            Object[][] dataArr = null;
            ArrayList<Object[]> dataList = new ArrayList<>();
            while (rs.next()) {
                //System.out.println(rs.getString(1) + "  " + rs.getString(2)+"  " +rs.getString(3));                
                Object[] objArr = {rs.getString(2), rs.getString(3), rs.getString(5),
                    rs.getString(4), rs.getString(7), rs.getString(9), rs.getString(8), rs.getString(10),
                    rs.getString(11), rs.getString(6),rs.getString(12)} ;
                dataList.add(objArr);
            }
            
                            /*
                id:1, ad:2 , soyad:3, okul:4, tc:5, adres:6,
                bölüm:7, hastalik:8, telefon:9, sınıf:10, odano:11
                */
                
            
            dataArr = new Object[dataList.size()][];
            for (int i = 0; i < dataList.size(); i++) {
                dataArr[i] = dataList.get(i);
                System.out.println(dataArr[i][0]);
            }


            model = new javax.swing.table.DefaultTableModel(
                    dataArr,
                    new String[]{
                         "Öğrenci Adı", "Öğrenci Soyadı", "T.C", "Okul Bilgisi", "Bölüm Bilgisi", "Telefon Numarası", "Hastalık Durumu", "Sınıf", "Oda No","Adres","Kayıt Tarihi"
                    }
            ) {
                
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class,java.lang.String.class
                };
                boolean[] canEdit = new boolean[]{
                    true,true,true,true,true,true,true,true,true,true,true
                };
                

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };

            table.setModel(model);

        } catch (SQLException e) {
            System.out.println(e);
        }

        
        
        
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model;

        mysqlConnector msql = new mysqlConnector();
        Connection con = msql.connectorSender();
        try {
            Statement stmt = con.createStatement();
            String sorgulanacakOda = jTextField2.getText();
            ResultSet rs = stmt.executeQuery(String.format("select * from silinenogrenciler")) ;
            Object[][] dataArr = null;

            ArrayList<Object[]> dataList = new ArrayList<>();
            while (rs.next()) {
                //System.out.println(rs.getString(1) + "  " + rs.getString(2)+"  " +rs.getString(3));                
                Object[] objArr = {rs.getString(2), rs.getString(3), rs.getString(5),
                    rs.getString(4), rs.getString(7), rs.getString(9), rs.getString(8), rs.getString(10),
                    rs.getString(11), rs.getString(6),rs.getString(12),rs.getString(13)} ;
                dataList.add(objArr);
            }
            
                            /*
                id:1, ad:2 , soyad:3, okul:4, tc:5, adres:6,
                bölüm:7, hastalik:8, telefon:9, sınıf:10, odano:11
                */
                
            
            dataArr = new Object[dataList.size()][];
            for (int i = 0; i < dataList.size(); i++) {
                dataArr[i] = dataList.get(i);
                System.out.println(dataArr[i][0]);
            }


            model = new javax.swing.table.DefaultTableModel(
                    dataArr,
                    new String[]{
                         "Öğrenci Adı", "Öğrenci Soyadı", "T.C", "Okul Bilgisi", "Bölüm Bilgisi", "Telefon Numarası", "Hastalık Durumu", "Sınıf", "Oda No","Adres","Kayıt Tarihi","Silinme Tarihi"
                    }
            ) {
                
                Class[] types = new Class[]{
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class, java.lang.String.class,
                    java.lang.String.class, java.lang.String.class,java.lang.String.class 
                };
                boolean[] canEdit = new boolean[]{
                    true,true,true,true,true,true,true,true,true,true,true,true
                };
                

                @Override
                public Class getColumnClass(int columnIndex) {
                    return types[columnIndex];
                }

                @Override
                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit[columnIndex];
                }
            };

            table.setModel(model);

        } catch (SQLException e) {
            System.out.println(e);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ogrenciSorgusu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ogrenciSorgusu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ogrenciSorgusu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ogrenciSorgusu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ogrenciSorgusu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel header;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTable table;
    private javax.swing.JTextField tcNo;
    // End of variables declaration//GEN-END:variables
}
